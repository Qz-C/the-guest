// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id          Int @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  email       String   @unique @db.VarChar(255)
  password    String   @db.VarChar(255)
  role        Role    
  active      Boolean  @default(true)
  user        User?
  facility    Facility?
  admin       Admin?
  firstAccess Boolean  @default(true)
}

model User{
  account Account @relation(fields: [id], references: [id]) 
  id      Int @id
}

model Facility{
  account    Account @relation(fields: [id], references: [id]) 
  id         Int @id

  placeName  String? @unique

  place      Place? @relation(fields: [placeId], references: [id])
  placeId    Int?

  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int?

  visits     Visit[]
}

model Admin{
  account Account @relation(fields: [id], references: [id]) 
  id      Int @id
}

model Place{
  id        Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  country   String
  city      String
  street    String @db.VarChar(255)
  building  String @db.VarChar(255)
  facility  Facility?
}

model Customer{
  id                Int @id @default(autoincrement())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now())
  name              String
  numberOfEmployees Int
  facilities        Facility[]
  lead              Boolean
}

model Visitor{
  id            Int @id @default(autoincrement())
  email         String  @db.VarChar(255)
  accepted      Boolean @default(false)
  justification String? @db.VarChar(500)
  
  visit         Visit @relation(fields: [visitId], references: [id])
  visitId       Int 
}

model Visit{
  id          Int @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  
  place       Facility @relation(fields: [facilityId], references: [id])
  facilityId  Int

  visitors    Visitor[]
  startTime   DateTime
  finishTime  DateTime
  title       String 
  description String @db.VarChar(500)
}

enum Role{
  USER
  ADMIN
  FACILITY
}