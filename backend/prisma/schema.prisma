// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}


model Account {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @map(name:"create_at")
  updatedAt   DateTime @default(now()) @map(name:"update_at")
  email       String   @unique @db.VarChar(255)
  password    String   @db.VarChar(255)
  role        Role
  active      Boolean  @default(true)
  firstAccess Boolean  @default(true) @map(name:"first_access")
  customer    Customer?
  guest       Guest?
  @@map("accounts")
}

model Place{
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map(name:"create_at")
  updatedAt  DateTime @default(now()) @map(name:"update_at")
  country    String
  city       String
  street     String   @db.VarChar(255)
  building   String?  @db.VarChar(255)
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId Int      @map(name:"customer_id")
  visits     Visit[]
  @@map("places")
}

model Customer{
  id                Int      @id @default(autoincrement())
  createdAt         DateTime @default(now()) @map(name:"create_at")
  updatedAt         DateTime @default(now()) @map(name:"update_at")
  name              String
  numberOfEmployees Int      @map(name:"number_of_employees") 
  places            Place[]
  account           Account  @relation(fields: [email], references: [email], onDelete:Cascade)
  email             String   @db.VarChar(255)
  @@map("customers")
}

model Guest{
  id            Int        @id @default(autoincrement())
  account       Account    @relation(fields: [email], references: [email], onDelete:Cascade)
  email         String     @db.VarChar(255)
  justification String?    @db.VarChar(500)
  accepted      Boolean    @default(false)
  visit         Visit      @relation(fields: [visitId], references: [id], onDelete:Cascade)
  visitId       Int        @map(name:"visit_id") 
  @@map("guests")
}

model Visit{
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @map(name:"create_at")
  updatedAt   DateTime @default(now()) @map(name:"update_at")
  guests      Guest[]
  place       Place    @relation(fields: [placeId], references:[id])
  placeId     Int      @map(name:"place_id")
  startTime   DateTime @map(name:"start_time")
  finishTime  DateTime @map(name:"finish_time")
  title       String 
  description String  @db.VarChar(500)
  @@map("visits")
}

enum Role{
  USER
  ADMIN
  FACILITY
}